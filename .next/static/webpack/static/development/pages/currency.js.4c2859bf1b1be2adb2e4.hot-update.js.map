{"version":3,"file":"static/webpack/static\\development\\pages\\currency.js.4c2859bf1b1be2adb2e4.hot-update.js","sources":["webpack:///./pages/currency.js"],"sourcesContent":["import { Component } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { Select, Button, Menu, Icon, Popconfirm, message, Affix } from 'antd'\r\nimport { RealTimeChartWidget } from 'react-tradingview-widgets'\r\nimport '../assets/css/style.css'\r\n\r\nconst ButtonGroup = Button.Group;\r\nconst Option = Select.Option;\r\nconst currencies = ['USDTRY', 'EURUSD', 'USDKRW', 'USDIDR'];\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nconst Currencybox = (props) => (\r\n    <Row style={{marginTop:10}}>\r\n        <Col span={24}>\r\n            <div style={{background:'#FFF',paddingTop:5}}>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <ButtonGroup style={{margin:'3px 0 0 3px'}}>\r\n                            <Button icon=\"plus\" onClick={this.boxadd} />\r\n                            <Popconfirm placement=\"topLeft\" title='Are you sure to delete this box?' onConfirm={() => this.boxremove(props.boxkey)} okText=\"Yes\" cancelText=\"No\">\r\n                                <Button icon=\"minus\" />\r\n                            </Popconfirm>\r\n                        </ButtonGroup>\r\n                        <Select value={this.state.currencyboxes[props.boxkey]} onChange={(e) => this.currencychange(props.boxkey, e)} style={{marginLeft:3}}>\r\n                            {currencies.map((currency, i) => <Option value={ currency } key={ currency }>{ currency }</Option>)}\r\n                        </Select>\r\n                        <label style={{float:'right',borderLeft:'solid silver 1px',padding:'9px 20px'}}>\r\n                            { props.currency }\r\n                        </label>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24} style={{height:300,textAlign:'center'}}>\r\n                        <Tradingview currency={props.currency}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Col>\r\n    </Row>                \r\n)\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        tradingviewstatus: false,\r\n        currencyboxes: [currencies[0]]\r\n    }    \r\n    \r\n    boxadd = () => {\r\n        let T = this.state.currencyboxes;\r\n        var isNew = false;\r\n        for (let currency of currencies) {\r\n            if (!this.state.currencyboxes.includes(currency)) {\r\n                T.push(currency);\r\n                isNew = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!isNew) {\r\n            T.push(currencies[0]);                \r\n        }\r\n        this.setState({\r\n            currencyboxes: T\r\n        });\r\n        message.success('A new box created');\r\n    }\r\n    boxremove = (boxkey) => {\r\n        let T = this.state.currencyboxes;\r\n        if (T.length == 1) {\r\n            message.warning('Sorry. The last box cannot be removed.');\r\n            return;\r\n        }\r\n        T.splice(boxkey, 1);\r\n        this.setState({\r\n            currencyboxes: T\r\n        })\r\n        message.success('The selected box removed.');\r\n    }\r\n    currencychange = (boxkey, value) => {\r\n        let T = this.state.currencyboxes;\r\n        T[boxkey] = value;\r\n        this.setState({\r\n            currencyboxes: T\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(function() {\r\n            this.setState({tradingviewstatus: true})\r\n        }.bind(this), 0)\r\n    }\r\n    render() {\r\n        if (this.state.tradingviewstatus) {\r\n            var Tradingview = props => (\r\n                <RealTimeChartWidget\r\n                    width=\"100%\"\r\n                    height=\"300\"\r\n                    symbol={ props.currency }\r\n                    locale=\"en\"\r\n                    interval=\"D\"\r\n                    theme=\"light\"\r\n                />\r\n            )\r\n        } else {\r\n            var Tradingview = () => '';\r\n        }\r\n        return (\r\n            <div style={{padding:10}}>\r\n                <Row>\r\n                    <Affix offsetTop={10}>\r\n                        <Menu\r\n                            onClick={this.handleClick}\r\n                            selectedKeys={['currency']}\r\n                            mode=\"horizontal\"\r\n                            theme='dark'>\r\n                            <Menu.Item key=\"exchange\">\r\n                                <a href=\"/index\">\r\n                                    <Icon type=\"appstore\" />Exchange\r\n                                </a>\r\n                            </Menu.Item>                        \r\n                            <Menu.Item key=\"currency\">\r\n                                <a href=\"/currency\">\r\n                                    <Icon type=\"property-safety\" />Currency\r\n                                </a>\r\n                            </Menu.Item>                        \r\n                            <Menu.Item key=\"parity\">\r\n                                <a href=\"/parity\">\r\n                                    <Icon type=\"stock\" />Parity\r\n                                </a>\r\n                            </Menu.Item>\r\n                            <SubMenu style={{float:'right',padding:0}} title={<span className=\"submenu-title-wrapper\"><Icon type=\"team\" style={{fontSize:20}} /></span>}>\r\n                                <Menu.Item key=\"user:1\" style={{margin:0,background:'#00101a'}}><Icon type=\"user\"/>John</Menu.Item>\r\n                                <Menu.Item key=\"user:2\" style={{margin:0,background:'#00101a'}}><Icon type=\"user\"/>Kerry</Menu.Item>\r\n                                <Menu.Item key=\"user:3\" style={{margin:0,background:'#00101a'}}><Icon type=\"user\"/>Volten</Menu.Item>\r\n                            </SubMenu>\r\n                        </Menu>\r\n                    </Affix>\r\n                </Row>\r\n                {this.state.currencyboxes.map((currency, i) => (\r\n                    <Currencybox key={i} currency={currency} boxkey={i}/>\r\n                ))}                \r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAtBA;AACA;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;;;;AApGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}